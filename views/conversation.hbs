<!DOCTYPE html>
<html lang="en">

<head>
    <title>Chat App</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="/css/reset.min.css" rel="stylesheet">
    <link href="/css/font-awesome.min.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
</head>

<body>
    <div class="container clearfix">
        <div class="people-list" id="people-list">
            <div class="search">
                <input type="text" placeholder="search" />
                <i class="fa fa-search"></i>
            </div>
            <ul class="list">
                {{#each userList}}
                    <li class="clearfix">
                        <a href="/messengers/{{uid}}">
                            <img src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/195612/chat_avatar_01.jpg" alt="avatar" />
                            <div class="about">
                                <div class="name">{{fullname}}</div>
                                <div class="status">
                                    <i class="fa fa-circle online"></i> online
                                </div>
                            </div>
                        </a>
                    </li>
                {{/each}}

            </ul>
        </div>

        <div class="chat">
            <div class="chat-header clearfix">
                <img src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/195612/chat_avatar_01_green.jpg" alt="avatar" />

                <div class="chat-about">
                    <div class="chat-with">chat with {{targetUser.fullname}}</div>

                    <div class="chat-num-messages">{{conversationId}}</div>
                </div>
                
                <a href="/logout"><i class="fa fa-sign-out" style="color: #e74c3c; font-size: 35px"></i></a>
            </div>
            <!-- end chat-header -->

            <div class="chat-history">
                <ul>

                    {{#each messages}}
                        {{#ifCond ...targetUser.fullname '!==' sender}}
                            <li class="clearfix">
                                <div class="message-data align-right">
                                    <span class="message-data-time">{{moment createdAt "fromNow"}}</span> &nbsp; &nbsp;
                                    <span class="message-data-name">{{sender}}</span> <i class="fa fa-circle me"></i>

                                </div>
                                <div class="message other-message float-right">
                                    {{content}}
                                </div>
                            </li>
                        {{else}}
                            <li>
                                <div class="message-data">
                                    <span class="message-data-name"><i class="fa fa-circle online"></i> {{sender}}</span>
                                    <span class="message-data-time">{{moment createdAt "fromNow"}}</span>
                                </div>
                                <div class="message my-message">
                                    {{content}}
                                </div>
                            </li>
                        {{/ifCond}}
                    {{/each}}
                </ul>

            </div>
            <!-- end chat-history -->

            <div class="chat-message clearfix">
                <textarea name="message-to-send" id="message-to-send" placeholder="Type your message" rows="3"></textarea>

                {{!--<i class="fa fa-file-o"></i> &nbsp;&nbsp;&nbsp;
                <i class="fa fa-file-image-o"></i>--}}
                <button>Send</button>

            </div>
            <!-- end chat-message -->

        </div>
        <!-- end chat -->

    </div>
    <!-- end container -->
    
    <script src="/js/jquery-3.1.1.min.js"></script>
    <script src="/js/handlebars-v4.0.5.js"></script>
    <script id="message-template" type="text/x-handlebars-template">
        <li class="clearfix">
            <div class="message-data align-right">
                <span class="message-data-time">\{{time}}</span> &nbsp; &nbsp;
                <span class="message-data-name">{{currentUser.fullname}}</span> <i class="fa fa-circle me"></i>
            </div>
            <div class="message other-message float-right">
                \{{messageOutput}}
            </div>
        </li>
    </script>

    <script id="message-response-template" type="text/x-handlebars-template">
        <li>
            <div class="message-data">
                <span class="message-data-name"><i class="fa fa-circle online"></i>{{targetUser.fullname}}</span>
                <span class="message-data-time">\{{time}}</span>
            </div>
            <div class="message my-message">
                \{{response}}
            </div>
        </li>
    </script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/list.js/1.5.0/list.min.js"></script>
    <script src="/js/moment.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    {{!--<script src="/js/index.js"></script>--}}
    <script>
        var conversationId = "{{conversationId}}";
        var socket = io();
        socket.on('connect', function () {
            console.log('Connected to server');
            socket.emit('join', conversationId);
        });

        socket.on('newMessage', function (message) {

            var templateResponse = Handlebars.compile($("#message-response-template").html());
            var contextResponse = {
                response: message.content,
                time: message.createdAt
            };
            chat.$chatHistoryList.append(templateResponse(contextResponse));
            chat.scrollToBottom();

            // var contextResponse = {
            //   response: message.content,
            //   time: message.createdAt
            // };

            // chat.$chatHistoryList.append('<li><div class="message-data"><span class="message-data-name"><i class="fa fa-circle online"></i>hello</span><span class="message-data-time">' + contextResponse.time + '</span></div><div class="message my-message">' + contextResponse.response + '</div></li>');
            // chat.scrollToBottom();
            console.log(contextResponse);
        });

        socket.on('disconnect', function () {
            console.log('Disconnected to server');
        });

        var chat = {
        message: {},
        init: function () {
            this.cacheDOM();
            this.bindEvents();
            this.render();
        },
        emitCreateMessage: function (message) {
            socket.emit('createMessage', message);
        },
        cacheDOM: function () {
            this.$chatHistory = $('.chat-history');
            this.$button = $('button');
            this.$textarea = $('#message-to-send');
            this.$chatHistoryList = this.$chatHistory.find('ul');
        },
        bindEvents: function () {
            this.$button.on('click', this.addMessage.bind(this));
            this.$textarea.on('keyup', this.addMessageEnter.bind(this));
        },
        render: function () {
            this.scrollToBottom();
            if (this.message.content.trim() !== '') {
                var template = Handlebars.compile($("#message-template").html());
                var context = {
                    messageOutput: this.message.content,
                    time: new Date().getTime()
                };

                this.$chatHistoryList.append(template(context));
                this.scrollToBottom();
                this.$textarea.val('');
            }
        },
        addMessage: function () {
            this.message = {
                content: this.$textarea.val(),
                sender: "{{currentUser.fullname}}"
            };
            this.render();
            this.emitCreateMessage(this.message);
        },
        addMessageEnter: function (event) {
            // enter was pressed
            if (event.keyCode === 13) {
            this.addMessage();
            }
        },
        scrollToBottom: function () {
            this.$chatHistory.scrollTop(this.$chatHistory[0].scrollHeight);
        },
        getRandomItem: function (arr) {
            return arr[Math.floor(Math.random() * arr.length)];
        }
        };

        chat.init();

        var searchFilter = {
        options: {
            valueNames: ['name']
        },
        init: function () {
            var userList = new List('people-list', this.options);
            var noItems = $('<li id="no-items-found">No items found</li>');

            userList.on('updated', function (list) {
            if (list.matchingItems.length === 0) {
                $(list.list).append(noItems);
            } else {
                noItems.detach();
            }
            });
        }
        };

        searchFilter.init();
    </script>
</body>

</html>